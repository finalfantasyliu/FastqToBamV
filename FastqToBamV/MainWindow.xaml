<Window x:Class="FastqToBamV.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:MyNamespace="clr-namespace:FastqToBamV"
      mc:Ignorable="d"
      
   
        Title="MainWindow" Height="800" Width="1280" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True" Background="Transparent" 
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <!--#region ToggleStyle1-->
        <Style x:Key="ToggleStyle1" TargetType="{x:Type MyNamespace:Toggle}">
            <Setter Property="MaxHeight" Value="50"></Setter>
            <Setter Property="MaxWidth" Value="500"></Setter>
            <Setter Property="MinHeight" Value="28"></Setter>
            <Setter Property="MinWidth" Value="70"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MyNamespace:Toggle}">
                        <Border  Background="#FFD1D1D1" CornerRadius="15" x:Name="bk" BorderBrush="DarkGray" BorderThickness="1.2">
                            <Ellipse Fill="#FF9386BB" HorizontalAlignment="Left" Margin="3.5" Height="23" Width="23" x:Name="ep"></Ellipse>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right"></Setter>
                                <Setter Property="Background"  TargetName="bk" Value="#FF64F9CA"></Setter>
                                <Setter Property="Fill" TargetName="ep" Value="#6741d9"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion ToggleStyle1-->

        <!--#region ComboboxStyle-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="2 2 2 2" Height="25">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0 0 5 0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" >
                                <Icon:PackIconMaterial Kind="DatabaseCheck" x:Name="arrow" Foreground="#6741d9" VerticalAlignment="Center" Height="17" Width="17"></Icon:PackIconMaterial>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>-->
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>-->
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="WhiteSmoke" BorderBrush="#FFD1D1D1" BorderThickness="0.8" CornerRadius="0 0 0 0">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>

                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion ComboboxStyle-->

    </Window.Resources>
    <Border Background="#eff2f7" CornerRadius="30" MouseDown="Border_MouseDown">
        <Grid>
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--#region Left Menu-->
            <Grid>
                <Grid.RowDefinitions>

                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--Menu Icon-->

                <Border Grid.Row="1" Background="#623ed0" CornerRadius="30 50 0 30">
                    <DockPanel>
                        <!--Menu Logo-->
                        <Border Width="80" Height="80" Padding="3" Background="White" CornerRadius="100" DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="20 10 0 0">
                            <Ellipse>
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="/Images/FastqToBamV.png"></ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                        <TextBlock Text="FastqToBam" Foreground="White" FontSize="28" FontWeight="SemiBold" DockPanel.Dock="Top" TextAlignment="Center" Margin="5 20 0 8"></TextBlock>
                        <TextBlock Text="Operation Panel" Foreground="White" FontSize="19" FontWeight="SemiBold" DockPanel.Dock="Top" TextAlignment="Center" Margin="0 10 0 0" ></TextBlock>
                        <Rectangle Margin="20 20 20 10" DockPanel.Dock="Top" Height="3" Fill="#7e5fdc" ></Rectangle>
                        <!--Menu Buttons-->
                        <StackPanel DockPanel.Dock="Top">
                            <Button Style="{StaticResource menuButton}" Click="FolderClick" Name="FolderButton">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Folder" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Folder" FontSize="18" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>

                            <Button Style="{StaticResource menuButton}" Click="SettingClick" Name="SettingButton" >
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Toolbox" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Setting" FontSize="18" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource menuButton}" Click="ProcessClick" Name="ProcessButton">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="RocketLaunch" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Process" FontSize="18" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        <Button Style="{StaticResource menuButton}" VerticalAlignment="Bottom" Margin="15 0 15 30" Click="CloseFastqToBam">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="LocationExit" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="Exit" FontSize="18" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </Border>
            </Grid>
            <!--#endregion Left Menu-->

            <!--#region Main Section-->
            <Button Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent" Margin="0 10 20 0"  Foreground="Black" BorderThickness="0" Click="FullScreenClick">
                <Icon:PackIconMaterial Kind="Fullscreen" ></Icon:PackIconMaterial>
            </Button>

            <!--#region Folder-->
            <Grid Grid.Column="1" Margin="30 28 20 20" Visibility="Visible" Name="Folder" d:Visibility="Collapsed">
                <Grid.RowDefinitions>

                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>

                    <RowDefinition Height="0.15*"/>

                </Grid.RowDefinitions>
                <!--Page Title-->

                <Grid Width="300" HorizontalAlignment="Left" Margin="0 20">
                    <TextBlock Margin="35 0 0 0" VerticalAlignment="Center" Foreground="Black"  Panel.ZIndex="1" IsHitTestVisible="False" Text="File Management"  FontSize="25" FontWeight="Bold"></TextBlock>
                    <Icon:PackIconMaterial Style="{StaticResource menuButtonIcon}" Kind="FolderSettings" HorizontalAlignment="Left" Margin="8 0 0 0" Height="25"></Icon:PackIconMaterial>
                </Grid>
                <Button HorizontalAlignment="Right" Style="{StaticResource addButton}" Click="AddInputFolder">
                    <StackPanel Orientation="Horizontal">
                        <Icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center" Width="11" Height="11" Margin=" 0 1 8 0"></Icon:PackIconMaterial>
                        <TextBlock Text="Add New Folder"></TextBlock>
                    </StackPanel>
                </Button>
                <Rectangle Grid.Row="1" Height="3" Fill="#dae2ea"></Rectangle>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0 10 0 10">
                    <TextBlock Text="{Binding ElementName=fileDataGrid, Path=Items.Count}" FontSize="18" Foreground="Black" VerticalAlignment="Center" FontWeight="SemiBold"></TextBlock>
                    <TextBlock Text="Files in analysis folder " VerticalAlignment="Center" FontSize="18" Margin="8 0 0 0 " FontWeight="SemiBold"></TextBlock>
                </StackPanel>


                <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" x:Name="fileDataGrid" VerticalScrollBarVisibility="auto" HorizontalScrollBarVisibility="auto" Grid.Row="3" d:ItemsSource="{d:SampleData ItemCount=10}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn  Width="auto" Header="ToBam">


                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Margin="3 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding Check}" Checked="AnalysisCheck" Unchecked="AnalysisUnCheck">
                                        <CheckBox.LayoutTransform>
                                            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                                        </CheckBox.LayoutTransform>
                                    </CheckBox>
                                </DataTemplate>

                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="File Name" IsReadOnly="True" Width="*" Binding="{Binding FileName}">
                            <DataGridTextColumn.CellStyle>
                                <Style>
                                    <Style.Setters>
                                       
                                    </Style.Setters>


                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>-->
                        <DataGridTemplateColumn Header="File Name" IsReadOnly="True" Width="auto" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="18 0 0 0" Text="{Binding FileName}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Read" IsReadOnly="True" Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Width="25" Height="25" CornerRadius="50" Margin="10 0 10 0" Background="{Binding ReadBackground}">
                                        <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="0 0 0 1" Text="{Binding Read}"></TextBlock>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="File Path" IsReadOnly="True" Width="1.5*" Binding="{Binding FilePath}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" >
                                        <Button Style="{StaticResource gridPlusButton}" Margin="0 0 6 0" Click="AddFilesToSamples">
                                            <Icon:PackIconMaterial Kind="PlusBox" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>
                                        <Button Style="{StaticResource gridRemoveButton}" Click="RemoveFilesFromSamples">
                                            <Icon:PackIconMaterial Kind="TrashCan" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>


                <Button Style="{StaticResource addButton}" Grid.Row="4" Margin="0 20 0 10" Width="150" Background="Green" Click="NextStepSetting">
                    <StackPanel Orientation="Horizontal">
                        <Icon:PackIconMaterial Kind="StepForward2" Margin="0 0 10 0" ></Icon:PackIconMaterial>
                        <TextBlock Text="Setting" FontSize="14"></TextBlock>
                    </StackPanel>

                </Button>

            </Grid>
            <!--#endregion Folder-->

            <!--#region Setting-->
            <Grid Margin="30 28 20 20" Grid.Column="1" Name="Settings" Visibility="Collapsed" d:Visibility="Visible">
                <Grid.RowDefinitions>

                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.1*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="5 20 0 20" Grid.Row="0">
                    <Icon:PackIconMaterial Kind="Toolbox" Width="25" Height="25" VerticalAlignment="Center" ></Icon:PackIconMaterial>
                    <TextBlock Text="Transform Setting" VerticalAlignment="Center" FontSize="25" Margin="3 0 0 0" FontWeight="DemiBold" ></TextBlock>
                </StackPanel>
                <Rectangle Grid.Row="1" Height="3" Fill="#dae2ea"></Rectangle>
                <StackPanel Grid.Row="2" Margin="0 20">
                    <StackPanel Orientation="Horizontal" Margin="0 10 0 25">
                        <TextBlock Text="Reference Index" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200"></TextBlock>
                        <ComboBox Style="{DynamicResource ComboBoxStyle1}"  Width="140" VerticalAlignment="Center" Margin="20 0 0 0" x:Name="ReferenceCombobox" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold" SelectedIndex="0"></ComboBox>
                    </StackPanel>
                    <StackPanel  Orientation="Horizontal" Margin="0 25">
                        <TextBlock Text="Sort By Coordinates" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200" ></TextBlock>


                        <MyNamespace:Toggle Style="{DynamicResource ToggleStyle1}" Margin="20 0 0 0" IsChecked="{Binding SortByCoordinate}"></MyNamespace:Toggle>



                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 25">
                        <TextBlock Text="Preliminary SV Detection " FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200" TextWrapping="Wrap" ></TextBlock>
                        <MyNamespace:Toggle Style="{DynamicResource ToggleStyle1}" Margin="20 0 0 0" Height="35" IsChecked="{Binding DetectSV}"></MyNamespace:Toggle>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 25">
                        <TextBlock Text="Sequence Mode" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200" ></TextBlock>
                        <StackPanel Orientation="Horizontal" Width="250" Margin="20 0 0 0">
                            <RadioButton VerticalAlignment="Center" GroupName="Mode" Content="DNA-Seq" FontSize="18" IsChecked="True" Style="{StaticResource SeqModeRadioButton}" Tag="DNA-Seq" Checked="SeqModeChecked"></RadioButton>
                            <RadioButton VerticalAlignment="Center" GroupName="Mode" Margin="10 0 0 0" Content="RNA-seq" FontSize="18" Style="{StaticResource SeqModeRadioButton}" Tag="RNA-Seq" Checked="SeqModeChecked"></RadioButton>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="0 25">
                        <TextBlock Text="CPU Threads" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200" ></TextBlock>
                        <Border CornerRadius="5"  Width="60" Height="25" Background="White"  Margin="20 0 0 0">
                            <TextBox   Width="58" Height="24" VerticalAlignment="Center" FontSize="20" VerticalContentAlignment="Center"  Text="{Binding CPUThreads,Mode=TwoWay}" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Left" FontWeight="SemiBold"></TextBox>
                        </Border>

                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="0 25">
                        <TextBlock Text="Output Folder" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" TextAlignment="Center" Width="200"  ></TextBlock>
                        <Border Height="25" Width="500" Background="White" CornerRadius="5" Margin="20 0 0 0">
                            <TextBlock   Width="auto" VerticalAlignment="Center" FontSize="14"  Name="OutputFolderPath" Margin="8 0 0 0" FontWeight="SemiBold" ></TextBlock>
                        </Border>

                        <Button Style="{StaticResource addButton}" Width="40" Height="25" Margin="10 0 0 0" Click="AddOutputFolder">
                            <Icon:PackIconMaterial Kind="FolderOpen"></Icon:PackIconMaterial>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <Button Style="{StaticResource addButton}" Grid.Row="4" Margin="0 0 0 20" Width="150" Background="Green" Click="NextStepProcess">
                    <StackPanel Orientation="Horizontal">
                        <Icon:PackIconMaterial Kind="StepForward2" Margin="0 0 10 0" ></Icon:PackIconMaterial>
                        <TextBlock Text="Process" FontSize="14"></TextBlock>
                    </StackPanel>

                </Button>
            </Grid>
            <!--#endregion Setting-->

            <!--#region  Process-->
            <Grid Margin="30 28 20 20" Grid.Column="1" Name="Process" Visibility="Collapsed" d:Visibility="Collapsed">
                <Grid.RowDefinitions>

                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>

                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" Margin="5 20 0 20" >
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Icon:PackIconMaterial Kind="RocketLaunch" Width="25" Height="25" VerticalAlignment="Center" ></Icon:PackIconMaterial>
                        <TextBlock Text="Process Window" VerticalAlignment="Center" FontSize="25" Margin="7 0 0 0" FontWeight="DemiBold"></TextBlock>
                    </StackPanel>
                    <Button Style="{StaticResource addButton}" Width="100" Click="Run" Name="RunButon">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Run" Margin="0 0 5 0" FontSize="18" ></TextBlock>
                            <Icon:Material Kind="RunFast" Width="25" Height="25"></Icon:Material>

                        </StackPanel>
                    </Button>
                </DockPanel>

                <Rectangle Grid.Row="1" Height="3" Fill="#dae2ea"></Rectangle>
                <Border Grid.Row="2" BorderBrush="Black" BorderThickness="1" CornerRadius="3 3 0 0" Background="Black">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>

                        </Grid.RowDefinitions>
                        <Border Background="#FFEDEDED" Height="25" CornerRadius="3 3 0 0" Grid.Row="0">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="BookEdit" VerticalAlignment="Center" Margin="5 0 5 0" Foreground="#FF34C827" ></Icon:PackIconMaterial>
                                <TextBlock Text="Terminal"  VerticalAlignment="Center" ></TextBlock>
                            </StackPanel>

                        </Border>
                        <Border CornerRadius="0 0 3 3" Background="Black" Name="TerminalContent" Grid.Row="1" >

                            <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" Name="HistorySV" VerticalScrollBarVisibility="Visible" >
                                <TextBlock TextWrapping="Wrap" FontFamily="Consolas" Foreground="White" Text="{Binding Data}" Margin="5 5 0 0" FontSize="14"></TextBlock>
                            </ScrollViewer>



                        </Border>

                    </Grid>
                    <!--<StackPanel >
                        <Border Background="#FFEDEDED" Height="25" CornerRadius="5 5 0 0">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="BookEdit" VerticalAlignment="Center" Margin="5 0 5 0" Foreground="#FF34C827" ></Icon:PackIconMaterial>
                                <TextBlock Text="Terminal"  VerticalAlignment="Center" ></TextBlock>
                            </StackPanel>
                            
                        </Border>
                        
                        <Border CornerRadius="0 0 5 5" Background="Black" Name="TerminalContent">
                           
                                <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" Name="HistorySV" Height="auto" VerticalScrollBarVisibility="Auto" >
                                    <TextBlock TextWrapping="Wrap" FontFamily="Consolas" Foreground="White" Text="{Binding Data}" ></TextBlock>
                                </ScrollViewer>
                           
                           
                            
                        </Border>
                    </StackPanel>-->

                </Border>

            </Grid>

            <!--#endregion Process-->

            <!--#endregion Main Section-->


        </Grid>
    </Border>
</Window>
